[project]
name = "dailydevq-backend"
version = "1.0.0"
description = "DailyDevQ FastAPI Backend - AI-powered technical interview preparation service"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "pydantic>=2.9.0",
    "pydantic-settings>=2.6.0",
    "python-multipart>=0.0.12",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.1",
    "httpx>=0.27.2",

    # 데이터베이스
    "sqlalchemy>=2.0.35",
    "asyncpg>=0.29.0",
    "alembic>=1.13.3",

    # AWS
    "boto3>=1.35.36",
    "aioboto3>=13.2.0",

    # Redis
    "redis>=5.1.1",
    "hiredis>=3.0.0",

    # AI/ML
    "openai>=1.51.2",
    "anthropic>=0.39.0",

    # 유틸리티
    "python-slugify>=8.0.4",
    "email-validator>=2.2.0",
    "jinja2>=3.1.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.27.2",
    "faker>=30.3.0",
    "ruff>=0.7.0",
    "mypy>=1.11.2",
    "pre-commit>=4.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "faker>=30.3.0",
    "ruff>=0.7.0",
    "mypy>=1.11.2",
]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers --cov=dailydevq_backend --cov-report=html --cov-report=term"
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
